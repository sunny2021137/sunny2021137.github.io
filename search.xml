<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>刷題記錄 1： cpe必考1星題庫1~10題</title>
    <url>/2021/06/30/%E5%88%B7%E9%A1%8C%E8%A8%98%E9%8C%84-1/</url>
    <content><![CDATA[<p>本篇含cpe必考1星題庫中1~10題。(當前更新至第5題)<br>篇幅較大，可點選左列索引，跳至想查看的題目。<br> <span id="more"></span></p>
<h1 id="1-uva-10041"><a href="#1-uva-10041" class="headerlink" title="1. uva #10041"></a>1. uva #10041</h1><ul>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=12&page=show_problem&problem=982">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong><br>選一個點，其到其他點距離總和最短。</p>
<ul>
<li>注意：點有可能有重複，且中位數必須為題目給的點之一。</li>
</ul>
</li>
<li><p><strong>核心思路：</strong>找中位數。</p>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//23</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;	<span class="comment">//test case數</span></span><br><span class="line">    <span class="keyword">int</span> sum=<span class="number">0</span>;	<span class="comment">//中位數與其他點距離和</span></span><br><span class="line">    <span class="keyword">int</span> num;	<span class="comment">//某test case 點的數量</span></span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">int</span> mid;	<span class="comment">//num/2</span></span><br><span class="line">    vector&lt;<span class="keyword">int</span>&gt; addr;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		sum=<span class="number">0</span>;</span><br><span class="line">        cin&gt;&gt;num;</span><br><span class="line">        mid=num/<span class="number">2</span>;	<span class="comment">//中間</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;num; j++)	<span class="comment">//讀所有點</span></span><br><span class="line">		&#123;</span><br><span class="line">            cin&gt;&gt;temp;</span><br><span class="line">            addr.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">		<span class="comment">//排序</span></span><br><span class="line">        <span class="built_in">sort</span>(addr.<span class="built_in">begin</span>(), addr.<span class="built_in">end</span>());</span><br><span class="line">        <span class="comment">//中位數與他數距離和</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;num; j++)</span><br><span class="line">		&#123;</span><br><span class="line">            sum+=<span class="built_in">abs</span>(addr[j]-addr[mid]);</span><br><span class="line">		&#125;</span><br><span class="line">        cout&lt;&lt;sum&lt;&lt;endl;</span><br><span class="line">        addr.<span class="built_in">clear</span>();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2-uva-10055"><a href="#2-uva-10055" class="headerlink" title="2. uva #10055"></a>2. uva #10055</h1><ul>
<li><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=12&page=show_problem&problem=996">題目連結</a></li>
<li><strong>題目大意：</strong><br>求兩軍人數差(絕對值)。<ul>
<li>注意：<br>題目提到數字最高可到2^32，而int的正整數範圍最高為2^16-1，所以不能使用int來讀取。<br>且雖說題目提到敵軍數量必大於我軍，但無法得知第一個讀取的數字為敵軍還是我軍人數，所以計算時仍須加上絕對值。</li>
</ul>
</li>
<li><strong>核心思路：</strong>所求之人數差為 兩數相減加絕對值。<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span>	<span class="comment">//為了使用 絕對值函數abs() 引入</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> n1, n2;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;n1&gt;&gt;n2)</span><br><span class="line">	&#123;</span><br><span class="line">		cout&lt;&lt;<span class="built_in">abs</span>(n1-n2)&lt;&lt;endl;	<span class="comment">//兩數相減加絕對值</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="3-uva-10035"><a href="#3-uva-10035" class="headerlink" title="3. uva #10035"></a>3. uva #10035</h1><ul>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=12&page=show_problem&problem=976">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong><br>給兩數做加法，計算有多少次進位。</p>
<ul>
<li>注意：此題數目數目在int範圍內。無需使用字串或其他方式方式讀入。</li>
</ul>
</li>
<li><p><strong>核心思路：</strong></p>
<ol>
<li>位數對齊後一一對應，由後往前相加(前一次的進位也要加)</li>
<li>數字%10 可取得某位數值</li>
<li>需要一個變數紀錄前一次進位</li>
</ol>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 11</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> n1, n2;	<span class="comment">//數字1，數字2</span></span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;n1&gt;&gt;n2)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">int</span> carry=<span class="number">0</span>;	<span class="comment">//記錄進位</span></span><br><span class="line">		<span class="keyword">int</span> cnt=<span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(n1==<span class="number">0</span>&amp;&amp;n2==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">while</span>(n2&gt;<span class="number">0</span> || n1&gt;<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(n2&lt;=<span class="number">0</span>)	<span class="comment">//n2前方沒位數了</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(n1%<span class="number">10</span>+carry&gt;=<span class="number">10</span>)	<span class="comment">//有進位</span></span><br><span class="line">				&#123;</span><br><span class="line">					cnt++;</span><br><span class="line">					carry=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> carry=<span class="number">0</span>;</span><br><span class="line">				n1/=<span class="number">10</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(n1&lt;=<span class="number">0</span>)	<span class="comment">//n1前方沒位數了</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(n2%<span class="number">10</span>+carry&gt;=<span class="number">10</span>)	<span class="comment">//有進位</span></span><br><span class="line">				&#123;</span><br><span class="line">					cnt++;</span><br><span class="line">					carry=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> carry=<span class="number">0</span>;</span><br><span class="line">				n2/=<span class="number">10</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span>	<span class="comment">//兩數皆還有位數</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>((n1%<span class="number">10</span>+n2%<span class="number">10</span>+carry)&gt;=<span class="number">10</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					cnt++;</span><br><span class="line">					carry=<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> carry=<span class="number">0</span>;</span><br><span class="line">				n1/=<span class="number">10</span>;</span><br><span class="line">				n2/=<span class="number">10</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(cnt==<span class="number">0</span>) cout&lt;&lt;<span class="string">&quot;No carry operation.&quot;</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(cnt==<span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;1 carry operation.&quot;</span>&lt;&lt;endl;</span><br><span class="line">		<span class="keyword">else</span> cout&lt;&lt;cnt&lt;&lt;<span class="string">&quot; carry operations.&quot;</span>&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<ul>
<li>後記：此題兩數字若用字串讀取，再由後往前一個個字元做相加，應能減少一些代碼量。</li>
</ul>
<h1 id="4-uva-100"><a href="#4-uva-100" class="headerlink" title="4. uva #100"></a>4. uva #100</h1><ul>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=3&page=show_problem&problem=36">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong><br>有一演算法如下：</p>
<blockquote>
<ol>
<li>input n</li>
<li>print n</li>
<li>if n = 1 then STOP</li>
<li>if n is odd then n ←− 3n + 1</li>
<li>else n ←− n/2</li>
<li>GOTO 2</li>
</ol>
</blockquote>
<p>  且某數n的”cycle length”定義為，n經此演算法最終收斂為1，需要經幾次改變。<br>  給兩數i、 j，求i、j閉區間內(包含i、j)所有數的cycle length最大者。</p>
<ul>
<li>注意：此題提供的i、 j，不一定i&lt;=j！！</li>
</ul>
</li>
<li><p><strong>核心思路：</strong><br>區間的數一一套入演算法，計算各數cycle length。<br>求最大cycle length：計算完某數cycle length，與當前最大cycle length比較，若大於當前最大cycle length，將最大cycle length更新為某數cycle length。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//16</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">int</span> max=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">int</span> count;</span><br><span class="line">	<span class="keyword">int</span> i, j;</span><br><span class="line">	<span class="keyword">int</span> s, b;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;i&gt;&gt;j)</span><br><span class="line">	&#123;</span><br><span class="line">		max=<span class="number">0</span>;</span><br><span class="line">		<span class="comment">//s為閉區間開頭，b為閉區間結尾 </span></span><br><span class="line">		s=i&lt;j?i:j;</span><br><span class="line">		b=i&lt;j?j:i;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> k=s; k&lt;=b; k++)</span><br><span class="line">		&#123;</span><br><span class="line">			count=<span class="number">0</span>;</span><br><span class="line">			<span class="keyword">int</span> n=k;</span><br><span class="line">			<span class="comment">//套入演算法</span></span><br><span class="line">			<span class="keyword">while</span>(n!=<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				count++;</span><br><span class="line">				<span class="keyword">if</span>(n%<span class="number">2</span>==<span class="number">1</span>)</span><br><span class="line">				&#123;</span><br><span class="line">					n=<span class="number">3</span>*n+<span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span></span><br><span class="line">				&#123;</span><br><span class="line">					n/=<span class="number">2</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			count++;	<span class="comment">//計算改變次數</span></span><br><span class="line">			<span class="keyword">if</span>(max&lt;count) max=count;	<span class="comment">//更新最大cycle length</span></span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;j&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;max&lt;&lt;endl;</span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="5-uva-10929"><a href="#5-uva-10929" class="headerlink" title="5. uva #10929"></a>5. uva #10929</h1></li>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=21&page=show_problem&problem=1870">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong> 判斷一正整數n是否為11的倍數，當輸入測資為0，表示結束</p>
<ul>
<li>注意：此題目測資數字很大，用long long 也不能完全讀取。<br>(意思就是不能用除以11後餘數是否為0來判斷啦QAQ)</li>
</ul>
</li>
<li><p><strong>核心思路：</strong></p>
<ol>
<li>大數讀取：使用字串讀取</li>
<li>11倍數特性：{奇數位數字和-偶數位數字和}為11的倍數<br>若某數{奇數位數字和-偶數位數字和}為11的倍數，其為11的倍數。</li>
</ol>
</li>
<li><p><strong>特別注意！！！若題目數字前面有0，輸出時0需印出來; 若有空格則不印，</strong><br>  <strong>讀取字串時用cin&gt;&gt;str;，可避免讀取到空白字元</strong></p>
</li>
<li><p><strong>其他數字倍數規則整理：</strong></p>
<blockquote>
<p>1的倍數：任何數皆為1的倍數。<br>2的倍數：個位數字為偶數(含0)。<br>3的倍數：各個數字和為3的倍數。<br>4的倍數：末二位數為4的倍數(含00)。<br>5的倍數：個位數字為5或0。<br>6的倍數：各個數字和為6的倍數(同時是2和3的倍數)。<br>7的倍數：由個數起每三位數字一節，各奇數節和 與 偶數節和 相減，其差是7的倍數。<br>8的倍數：末三位數為8的倍數(含000)。<br>9的倍數：各個數字和為9的倍數。<br>10的倍數：個位數字為0。<br>11的倍數：奇數位數字和與偶數位數字和相差為11的倍數。<br>12的倍數：同時是3和4的倍數。<br>13的倍數：由個數起每三位數字一節，各奇數節和 與 偶數節和相減，其差是13的倍數。</p>
</blockquote>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//21</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> sum;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;s)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(s==<span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>; <span class="comment">//記得要用s字串來判斷，不要用數字值0，避免&#x27;000000000&#x27;也會中止 </span></span><br><span class="line">		sum=<span class="number">0</span>;</span><br><span class="line">		<span class="comment">// &#123;奇數位數字和-偶數位數字和&#125;</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.<span class="built_in">length</span>(); i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>) sum+=(<span class="keyword">int</span>)(s[i]-<span class="string">&#x27;0&#x27;</span>);	<span class="comment">//+奇數位數字</span></span><br><span class="line">			<span class="keyword">else</span>  sum-=(<span class="keyword">int</span>)(s[i]-<span class="string">&#x27;0&#x27;</span>);	<span class="comment">//-偶數位數字</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//判斷&#123;奇數位數字和-偶數位數字和&#125;是否為11倍數</span></span><br><span class="line">		<span class="keyword">if</span>(sum%<span class="number">11</span>==<span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			cout&lt;&lt;s&lt;&lt;<span class="string">&quot; is a multiple of 11.&quot;</span>&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			cout&lt;&lt;s&lt;&lt;<span class="string">&quot; is not a multiple of 11.&quot;</span>&lt;&lt;endl;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="6-uva-10101"><a href="#6-uva-10101" class="headerlink" title="6. uva #10101"></a>6. uva #10101</h1><p><em>此題題目格式是真的很麻煩:) 花了我幾個小時debug:)))</em></p>
<ul>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=13&page=show_problem&problem=1042">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong><br>左邊的文字對應右邊的數字：</p>
<blockquote>
<p>kuti： 10000000<br>lakh： 100000<br>hajar： 1000<br>shata： 100</p>
</blockquote>
<p>  將題目給的數字用上述對應文字的方式表現出來，如：</p>
<ul>
<li>45897458973958 印出 45 lakh 89 hajar 7 shata 45 kuti 89 lakh 73 hajar 9 shata 58</li>
<li>00000000000000 印出 0</li>
<li>1000000000 印出 1 shata kuti</li>
<li>000100100 印出 1 lakh 1 shata</li>
</ul>
</li>
<li><p>注意：此題輸出題號的格式要使用setw(4)！！！(佔四字元寬且靠右)</p>
</li>
<li><h2 id="解法1：字串解法"><a href="#解法1：字串解法" class="headerlink" title="解法1：字串解法"></a>解法1：字串解法</h2><p> 此方法是最開始的想法，不建議使用。<br> 因為要額外處理數字開頭多餘的0，串接邏輯不直接(要判斷哪些字串要印，判斷多且雜)，且字串相接效率不高。</p>
<ul>
<li><strong>核心思路：</strong><ol>
<li>大數讀取：使用字串讀取</li>
<li>對應文字：<br>可由中文對應去想，十百千萬，由後往前對應。若大於萬則又從十開始對應，產生循環。(…萬千百十萬千百十)<br>因為題目為10進制數字，且文字對應的數字皆為10的倍數，我們可用”數位數”的方式去對應。</li>
<li>印的格式：<ul>
<li>若某文字對應的數字字串為”00”，什麼都不印出</li>
<li>若某文字對應的數字字串為”0x”(x為1 ~ 9)，只印出”x”而不印出”0”</li>
<li>若某文字對應的數字字串為”xy”(x為1 ~ 9，y為0 ~ 9)，印出”xy”</li>
<li>kuti較特別，若數字大於8位數，即使kuti對應值為00，也需印出文字”kuti”(好比1000,0000為”1千萬”而非”1千”)</li>
</ul>
</li>
</ol>
</li>
</ul>
 <figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span>	<span class="comment">//為了setw() </span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	string s;</span><br><span class="line">	string s2=<span class="string">&quot;&quot;</span>;</span><br><span class="line">	string s3=<span class="string">&quot;&quot;</span>;</span><br><span class="line">	<span class="keyword">int</span> cnt=<span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;s)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//檢查開頭0的個數 </span></span><br><span class="line">		<span class="keyword">int</span> k;</span><br><span class="line">		<span class="keyword">for</span>(k=<span class="number">0</span>; k&lt;s.<span class="built_in">length</span>(); k++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(s[k]!=<span class="string">&#x27;0&#x27;</span>)<span class="keyword">break</span>; </span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(k==s.<span class="built_in">length</span>())	<span class="comment">//該數字字串全為0，直接輸出0(不去跑其他程式，避免000000000000輸出kuti)</span></span><br><span class="line">		&#123;</span><br><span class="line">			s2=<span class="string">&quot; 0&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			s2=<span class="string">&quot;&quot;</span>;</span><br><span class="line">			s3=<span class="string">&quot;&quot;</span>;	<span class="comment">//一開始的對應文字為&quot;&quot;</span></span><br><span class="line">			string tmp=<span class="string">&quot;&quot;</span>;	<span class="comment">//存當前文字對應的數字字串</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.<span class="built_in">length</span>()-k; i++)	<span class="comment">//由後往前遍歷，遍歷到開頭第一個不是0的位數</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">1</span>)	<span class="comment">//收集完kuti對應的數字字串</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]!=<span class="string">&#x27;0&#x27;</span>)tmp=s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]+tmp;</span><br><span class="line">					<span class="keyword">if</span>(tmp!=<span class="string">&quot;0&quot;</span>) s2=<span class="string">&quot; &quot;</span>+tmp+s3+s2;</span><br><span class="line">					<span class="keyword">else</span> s2=s3+s2;</span><br><span class="line">					s3=<span class="string">&quot; shata&quot;</span>;	<span class="comment">//更新下一個對應文字</span></span><br><span class="line">					tmp=<span class="string">&quot;&quot;</span>;</span><br><span class="line">				&#125; </span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">2</span>) 	<span class="comment">//收集完shata對應的數字字串</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]!=<span class="string">&#x27;0&#x27;</span>)tmp=s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]+tmp;</span><br><span class="line">					<span class="keyword">if</span>(tmp!=<span class="string">&quot;&quot;</span>) s2=<span class="string">&quot; &quot;</span>+tmp+s3+s2;</span><br><span class="line">					s3=<span class="string">&quot; hajar&quot;</span>;</span><br><span class="line">					tmp=<span class="string">&quot;&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">4</span>) <span class="comment">//收集完hajar對應的數字字串</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]!=<span class="string">&#x27;0&#x27;</span>)tmp=s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]+tmp;</span><br><span class="line">					<span class="keyword">if</span>(tmp!=<span class="string">&quot;0&quot;</span>) s2=<span class="string">&quot; &quot;</span>+tmp+s3+s2;</span><br><span class="line">					s3=<span class="string">&quot; lakh&quot;</span>;</span><br><span class="line">					tmp=<span class="string">&quot;&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> <span class="keyword">if</span>(i%<span class="number">7</span>==<span class="number">6</span>) <span class="comment">//收集完lakh對應的數字字串</span></span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span>(s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]!=<span class="string">&#x27;0&#x27;</span>)tmp=s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]+tmp;</span><br><span class="line">					<span class="keyword">if</span>(tmp!=<span class="string">&quot;0&quot;</span>) s2=<span class="string">&quot; &quot;</span>+tmp+s3+s2;	</span><br><span class="line">					s3=<span class="string">&quot; kuti&quot;</span>;</span><br><span class="line">					tmp=<span class="string">&quot;&quot;</span>;</span><br><span class="line">				&#125;</span><br><span class="line">				<span class="keyword">else</span> tmp=s[s.<span class="built_in">length</span>()<span class="number">-1</span>-i]+tmp;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(tmp!=<span class="string">&quot;&quot;</span>&amp;&amp;tmp!=<span class="string">&quot;0&quot;</span>)s2=<span class="string">&quot; &quot;</span>+tmp+s3+s2;	<span class="comment">//補上沒印到的部分(若為0不印)</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//輸出</span></span><br><span class="line">		cout&lt;&lt;<span class="built_in">setw</span>(<span class="number">4</span>)&lt;&lt;cnt&lt;&lt;<span class="string">&quot;.&quot;</span>&lt;&lt;s2&lt;&lt;endl;</span><br><span class="line">		cnt++;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<h1 id="7-uva-10240"><a href="#7-uva-10240" class="headerlink" title="7. uva #10240"></a>7. uva #10240</h1><p>真的再肝了QAQ</p>
<h1 id="8-uva-10008"><a href="#8-uva-10008" class="headerlink" title="8. uva #10008"></a>8. uva #10008</h1><ul>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=12&page=show_problem&problem=949">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong><br>給一數字n，代表此測資接下來會有n行字串。請統計這n行字串中，每個英文字母分別出現幾次，並依<strong>出現次數降序</strong>印出。</p>
<ul>
<li>注意：</li>
</ul>
<ol>
<li>英文字母不區分大小寫(大小寫視為同一字母)</li>
<li>不須去計算非英文字母的字元出現次數</li>
<li>印出答案時，只印出出現次數&gt;=1的英文字母</li>
</ol>
</li>
<li><p><strong>核心思路：</strong></p>
<ol>
<li>不區分大小寫：用toupper函式</li>
<li>統計：用map統計出現次數(也可用大小為26的陣列)</li>
<li>降序排列：用sort()函式(預設為生序)，並將sort規則設為降序<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//使用toupper()</span></span><br><span class="line"><span class="comment">//33</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span>	<span class="comment">//為了使用sort()</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cctype&gt;</span>	<span class="comment">//為了使用toupper()</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;map&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//排序規則為依&quot;出現次數&quot;降序</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; a, pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a.second &gt; b.second;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line">	vector&lt;pair&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt; &gt;v; </span><br><span class="line">	<span class="keyword">int</span> n;</span><br><span class="line">	string s;</span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">getline</span>(cin, s);	<span class="comment">//去掉留下的&quot;\n&quot; </span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">getline</span>(cin, s);</span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;s.<span class="built_in">length</span>(); j++)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(s[j]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;s[j]&lt;=<span class="string">&#x27;Z&#x27;</span> || s[j]&gt;=<span class="string">&#x27;a&#x27;</span>&amp;&amp;s[j]&lt;=<span class="string">&#x27;z&#x27;</span>)	<span class="comment">//為英文字母才統計</span></span><br><span class="line">				&#123;</span><br><span class="line">					s[j]=<span class="built_in">toupper</span>(s[j]);</span><br><span class="line">					m[s[j]]++;	<span class="comment">//用map去計數 </span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//將 字母 與 出現次數 做成 pair 放進vector</span></span><br><span class="line">		map&lt;<span class="keyword">char</span>, <span class="keyword">int</span>&gt;::iterator it;</span><br><span class="line">		<span class="keyword">for</span>(it=m.<span class="built_in">begin</span>(); it!=m.<span class="built_in">end</span>(); it++)	</span><br><span class="line">		&#123;</span><br><span class="line">			v.<span class="built_in">push_back</span>(<span class="built_in">make_pair</span>(it-&gt;first, it-&gt;second));</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//vector做排序</span></span><br><span class="line">		<span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), cmp);</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//輸出排序後的結果 </span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;v.<span class="built_in">size</span>(); i++)</span><br><span class="line">			cout&lt;&lt;v[i].first&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;v[i].second&lt;&lt;endl;</span><br><span class="line">			</span><br><span class="line">		m.<span class="built_in">clear</span>();</span><br><span class="line">		v.<span class="built_in">clear</span>();</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ul>
<h1 id="9-uva-10402"><a href="#9-uva-10402" class="headerlink" title="9. uva #10402"></a>9. uva #10402</h1><p>真的再肝了QAQ</p>
<h1 id="10-uva-11332"><a href="#10-uva-11332" class="headerlink" title="10. uva #11332"></a>10. uva #11332</h1><ul>
<li><p><a href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&category=25&page=show_problem&problem=2307">題目連結</a></p>
</li>
<li><p><strong>題目大意：</strong><br>若 n = 1234567892， 則函數f(n)定義為：</p>
<blockquote>
<p>f(n) = 1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 2 = 47<br>則<br>f(f(n)) = 4 + 7 = 11<br>f(f(f(n))) = 1 + 1 = 2 </p>
</blockquote>
<p>  如上述連續套用f(n)最終會得到一個位數字，此個位數定義為g(n)。<br>  求g(n)。</p>
<ul>
<li>注意：此題數字較大，用long long 讀取。</li>
</ul>
</li>
</ul>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">//13</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//f(n)</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">add</span><span class="params">(<span class="keyword">long</span> <span class="keyword">long</span>&amp; n)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> sum=<span class="number">0</span>;</span><br><span class="line">	<span class="keyword">while</span>(n!=<span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		sum+=n%<span class="number">10</span>;</span><br><span class="line">		n/=<span class="number">10</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	n=sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">long</span> <span class="keyword">long</span> n;	<span class="comment">//題目提到最大數為2,000,000,000，用long long </span></span><br><span class="line">	<span class="keyword">while</span>(cin&gt;&gt;n)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span>(n==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">while</span>(n&gt;=<span class="number">10</span>)	<span class="comment">//大於2位數，繼續套用f(n)函數 </span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">add</span>(n);	<span class="comment">//各位數相加	</span></span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;n&lt;&lt;endl;</span><br><span class="line">	&#125;</span><br><span class="line">	 </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h1 id="關於"><a href="#關於" class="headerlink" title="關於"></a>關於</h1><p><em>本系列為個人刷題的紀錄，做為記錄與將來複習用，所以有些題目註解簡略。</em><br><em>若恰好對你有幫助，我也很開心:)</em></p>
<p><em>希望看到這篇的你們和我都能在cpe取得好成績^^</em></p>
]]></content>
      <categories>
        <category>cpe uva</category>
        <category>1星</category>
        <category>cpe必考1星題庫</category>
      </categories>
      <tags>
        <tag>c++</tag>
      </tags>
  </entry>
  <entry>
    <title>第一篇 - 寫blog用到的語法紀錄</title>
    <url>/2021/06/29/%E7%AC%AC%E4%B8%80%E7%AF%87%20-%20%E5%AF%ABblog%E7%94%A8%E5%88%B0%E7%9A%84%E8%AA%9E%E6%B3%95%E7%B4%80%E9%8C%84/</url>
    <content><![CDATA[<p>避免自己忘記語法，第一篇blog記錄寫blog常用到的語法。<br>第一次學，希望不要忘得太快啦！</p>
<span id="more"></span>
<hr>
<h1 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h1><p>在blog資料夾下執行：</p>
<h2 id="1-創建資料夾"><a href="#1-創建資料夾" class="headerlink" title="1. 創建資料夾"></a>1. 創建資料夾</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo n page folder_name</span></span><br></pre></td></tr></table></figure>
<h2 id="2-新建文章"><a href="#2-新建文章" class="headerlink" title="2. 新建文章"></a>2. 新建文章</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">&quot;title&quot;</span>  <span class="regexp">//</span>或 hexo new <span class="string">&quot;title&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="3-部署至github"><a href="#3-部署至github" class="headerlink" title="3. 部署至github"></a>3. 部署至github</h2><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">hexo clean  <span class="regexp">//</span>清空</span><br><span class="line">hexo g      <span class="regexp">//g</span>enerate</span><br><span class="line">hexo d  <span class="regexp">//</span>deploy(部署)</span><br></pre></td></tr></table></figure>
<h2 id="4-預覽"><a href="#4-預覽" class="headerlink" title="4. 預覽"></a>4. 預覽</h2><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">hexo s</span></span><br></pre></td></tr></table></figure>
<h2 id="5-head部分"><a href="#5-head部分" class="headerlink" title="5. head部分"></a>5. head部分</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">第一篇</span> <span class="bullet">-</span> <span class="string">寫blog用到的語法紀錄</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2021-06-29 17:46:55</span></span><br><span class="line"><span class="attr">tags:</span> </span><br><span class="line">    <span class="bullet">-</span> <span class="string">hexo</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Markdown</span></span><br><span class="line"><span class="attr">categories:</span> <span class="string">blog筆記</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>
<hr>
<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h2 id="1-標題-1-6級"><a href="#1-標題-1-6級" class="headerlink" title="1. 標題(1-6級)"></a>1. 標題(1-6級)</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="section"># 1級標題</span></span><br><span class="line"><span class="section">## 2級標題</span></span><br><span class="line"><span class="section">### 3級標題</span></span><br><span class="line">...</span><br><span class="line"><span class="section">###### 6級標題</span></span><br></pre></td></tr></table></figure>
<h2 id="2-段落換行"><a href="#2-段落換行" class="headerlink" title="2. 段落換行"></a>2. 段落換行</h2><p><kbd>2個以上空格</kbd>加<kbd>enter</kbd> 或 空一行</p>
<h2 id="3-粗體、斜體-、"><a href="#3-粗體、斜體-、" class="headerlink" title="3. 粗體、斜體(*、_)"></a>3. 粗體、斜體(<kbd>*</kbd>、<kbd>_</kbd>)</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**粗體**</span></span><br><span class="line"><span class="emphasis">_斜體_</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜體<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br></pre></td></tr></table></figure>
<h2 id="4-分隔線-、-、"><a href="#4-分隔線-、-、" class="headerlink" title="4. 分隔線( * 、 - 、 _ )"></a>4. 分隔線( <kbd>*</kbd> 、 <kbd>-</kbd> 、 <kbd>_</kbd> )</h2><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure>
<h2 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h2><ul>
<li>無序( <kbd>*</kbd>、 <kbd>+</kbd> 、 <kbd>-</kbd> )  <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> list1</span><br><span class="line"><span class="bullet">-</span> list2</span><br></pre></td></tr></table></figure></li>
<li>有序  <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> list1</span><br><span class="line"><span class="bullet">2.</span> list2</span><br></pre></td></tr></table></figure></li>
<li>嵌套(子列表前加4空格) <figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">1.</span> list1</span><br><span class="line"><span class="bullet">    -</span> item1</span><br><span class="line"><span class="bullet">    -</span> item2</span><br><span class="line"><span class="bullet">2.</span> list2</span><br><span class="line"><span class="bullet">    -</span> item3</span><br><span class="line"><span class="bullet">    -</span> item4</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="6-區塊"><a href="#6-區塊" class="headerlink" title="6. 區塊"></a>6. 區塊</h2><ul>
<li>基本<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 段落開頭</span></span><br></pre></td></tr></table></figure></li>
<li>嵌套<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="quote">&gt; 1</span></span><br><span class="line">&gt;&gt; 2</span><br><span class="line">&gt;&gt;&gt; 3</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="7-代碼區"><a href="#7-代碼區" class="headerlink" title="7. 代碼區"></a>7. 代碼區</h2><p>用、、、前後包裹</p>
<h2 id="8-link"><a href="#8-link" class="headerlink" title="8. link"></a>8. link</h2><ul>
<li>文字顯示連結<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">[<span class="string">連結顯示文字</span>](<span class="link">連結地址</span>)</span><br></pre></td></tr></table></figure></li>
<li>直接顯示地址連結<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&lt;連結地址&gt;</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="9-圖片"><a href="#9-圖片" class="headerlink" title="9. 圖片"></a>9. 圖片</h2><p>使用img標籤可設寬高！</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">width</span>=<span class="string">&quot;&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="10-表格"><a href="#10-表格" class="headerlink" title="10. 表格"></a>10. 表格</h2><ul>
<li>基本<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">|  表頭   | 表頭  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 單元格  | 單元格 |</span><br><span class="line">| 單元格  | 單元格 |</span><br></pre></td></tr></table></figure></li>
<li>對齊方式<ul>
<li><kbd>-:</kbd>：右對齊</li>
<li><kbd>:-</kbd>：左對齊</li>
<li><kbd>:-:</kbd>： 居中對齊</li>
</ul>
</li>
</ul>
<hr>
<h1 id="Next"><a href="#Next" class="headerlink" title="Next"></a>Next</h1><p>Next主題官方文檔連結：<br><a href="https://theme-next.iissnan.com/">https://theme-next.iissnan.com/</a></p>
]]></content>
      <categories>
        <category>blog筆記</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
